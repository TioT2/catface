; Is space pressed checking program

; Current font displayer program

; GLOBALS
;     bx - current character
;     cx - x
;     dx - y

call _start
halt

_set_char:
    push dx
    push 40
    mul
    push cx
    add
    pop ax

    push [ax]
    push 0xFFFFFF00
    and
    push bx
    or
    pop [ax]
ret

_start:
    ; set text mode
    push 0x0
    vsm

    ; fill vertical part

    ; x = 2
    push 2
    pop cx

    ; y = 0
    push 0
    pop dx

    ; 0..=9 loop
    _start__x_num_loop:

        push 0x30
        push cx
        push 2
        sub
        add
        pop bx
        call _set_char

        ; x += cx
        push cx
        push 1
        add
        pop cx

        push cx
        push 12
        cmp
        jl _start__x_num_loop

    _start__x_ch_loop:

        push 0x41
        push cx
        push 12
        sub
        add
        pop bx
        call _set_char

        ; x += cx
        push cx
        push 1
        add
        pop cx

        push cx
        push 18
        cmp
        jl _start__x_ch_loop
	



    ; x = 2
    push 2
    pop dx

    ; y = 0
    push 0
    pop cx

    ; 0..=9 loop
    _start__y_num_loop:

        push 0x30
        push dx
        push 2
        sub
        add
        pop bx
        call _set_char

        ; x += dx
        push dx
        push 1
        add
        pop dx

        push dx
        push 12
        cmp
        jl _start__y_num_loop

    _start__y_ch_loop:

        push 0x41
        push dx
        push 12
        sub
        add
        pop bx
        call _set_char

        ; x += dx
        push dx
        push 1
        add
        pop dx

        push dx
        push 18
        cmp
        jl _start__y_ch_loop

    _start__inf_loop:
        ; y = 2
        push 2
        pop dx
    
        ; ch = '\0'
        push 0
        pop bx

        _start__main_y:
    
            ; x = 2
            push 2
            pop cx
           
            _start__main_x:

                push bx

                push bx
                igks
                push 0xDB
                mul
                pop bx

                ; set bx at (cx, dx)
                call _set_char

                pop bx
     
                ; ch += 1
                push bx
                push 1
                add
                pop bx
     
                ; x += 1
                push cx
                push 1
                add
                pop cx
     
                push cx
                push 18
                cmp
                jl _start__main_x
     
            ; y += 1
            push dx
            push 1
            add
            pop dx
     
            push dx
            push 18
            cmp
            jl _start__main_y

        vrs
        jmp _start__inf_loop
    ret
 
 
 
 
 
 